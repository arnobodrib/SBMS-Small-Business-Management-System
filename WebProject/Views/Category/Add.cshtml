@model WebProject.Models.CategoryViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section MyStyle
{
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
    </style>
}



<div>
    <h2>Add Category</h2>
    <form method="post">
        <table>
            <tr>
                <td>@Html.LabelFor(c => c.Code)</td>
                <td>@Html.TextBoxFor(x => x.Code, Model.Code)</td>
                <td>@Html.ValidationMessageFor(c => c.Code)<label id="codeError"></label></td>
            </tr>
            <tr>
                <td>@Html.LabelFor(c => c.Name)</td>
                <td>@Html.TextBoxFor(x => x.Name, Model.Name)</td>
                <td>@Html.ValidationMessageFor(c => c.Name)<label id="nameError"></label></td>

            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="Save" /></td>
                <td>
                    @if (ViewBag.Message != null)
                    {
                        <h2>@ViewBag.Message</h2>
                    }
                </td>
            </tr>
        </table>
    </form>
    @{
        Html.RenderPartial("~/Views/Shared/Category/_CategoryDetails.cshtml", Model);
    }
</div>


@section MyScript

{
 <script src="~/Scripts/jquery-1.8.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
 <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


 <script>
     $(document).ready(function () {

    function Contains(text_one, text_two) {
        if (text_one.indexOf(text_two) != -1)
            return true;
    }

    $("#Search").keyup(function () {
        var searhText = $("#Search").val().toLowerCase();
        $(".Search").each(function () {

            if (!Contains($(this).text().toLowerCase(), searhText)) {
                $(this).hide();
            }
            else {
                $(this).show();
            }
        });

    });

});


     $("#Name").focusout(function () {

         var name = $("#Name").val();

         var jsonRequesData = { name: name };

         $.ajax({
             url: "/Category/IsNameExist",
             type: "POST",
             data: jsonRequesData,
             success: function (data) {
                 //alert("Ajax Requiest Success");
                 $("#nameError").text("");
                 if (data === true) {
                     $("#nameError").text("Name Already Exists");
                     $("#Name").focus();
                 }

             },
             error: function () {
                 alert("Ajax Requiest Error to test unique Name");
             }
         });
     });

     $("#Code").focusout(function () {
                
         var code = $("#Code").val();

         var jsonRequesData = { code: code };

         $.ajax({
             url: "/Category/IsCodeExist",
             type: "POST",
             data: jsonRequesData,
             success: function (data) {
                 //alert("Ajax Requiest Success");
                 $("#codeError").text("");
                 if (data === true) {
                     $("#codeError").text("Code Already Exists");
                     $("#Code").focus();
                 }

             },
             error: function () {
                 alert("Ajax Requiest Error to test unique code");
             }
         });
     });



 </script>   
 
 

}
