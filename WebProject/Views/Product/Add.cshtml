@model WebProject.Models.ProductViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MyStyle
    {
    <style>
        table {
            font-family: Arial,sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
    </style>
}

<div>
    <h2>Product Information/Details</h2>
    <form method="post">
        <table>
            <tr>
                <td>CategoryCode</td>

                @*<td><input type="text" name="CategoryCode" value="@Model.CategoryCode"></td>*@
                @*<td>@Html.TextBox("CategoryCode", Model.CategoryCode)</td>*@

                <td>@Html.DropDownListFor(c => c.CategoryId, Model.CategorySelectListItems, "--Select--", new { id = "CategoryId" })</td>
                <td>@Html.ValidationMessageFor(c => c.CategoryId)</td>
            </tr>
            <tr>
                <td>Code</td>
                <td><input id="Code" type="text" name="Code" value="@Model.Code"></td>
                <td>@Html.ValidationMessageFor(c => c.Code)<label id="codeError"></label></td>
            </tr>
            <tr>
                <td>Name</td>
                <td><input id="Name" type="text" name="Name" value="@Model.Name"></td>
                <td>@Html.ValidationMessageFor(c => c.Name)<label id="nameError"></label></td>
            </tr>
            @*<tr>
                    <td>UnitPrice</td>
                    <td><input type="text" name="UnitPrice" value="@Model.UnitPrice"></td>
                    <td></td>
                </tr>*@
            <tr>
                <td>Recorder_Level</td>
                <td><input type="text" name="Recorder_Level" value="@Model.Recorder_Level" onkeypress='validate(event)'></td>
                <td>@Html.ValidationMessageFor(c => c.Recorder_Level)</td>
            </tr>
            <tr>
                <td>Description</td>
                <td><input type="text" name="Description" value="@Model.Description"></td>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="Save"></td>
                <td>
                    @if (ViewBag.Message != "")
                    {
                        <h3>
                            <b>@ViewBag.Message</b>
                        </h3>
                    }
                </td>
            </tr>
        </table>
    </form>

    @{
        Html.RenderPartial("~/Views/Shared/Product/_ProductDetails.cshtml", Model);
    }

</div>

@section MyScript{
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/ProjectScripts/Search.js"></script>
    <script>
       


        $("#Name").focusout(function () {

                var name = $("#Name").val();

                var jsonRequesData = { name: name };

                $.ajax({
                    url: "/Product/IsNameExist",
                    type: "POST",
                    data: jsonRequesData,
                    success: function (data) {
                        //alert("Ajax Requiest Success");
                        $("#nameError").text("");
                        if (data === true) {
                            $("#nameError").text("Name Already Exists");
                            $("#Name").focus();
                        }

                    },
                    error: function () {
                        alert("Ajax Requiest Error to test unique Name");
                    }
                });
        });

        $("#Code").focusout(function () {
                
                var code = $("#Code").val();

                var jsonRequesData = { code: code };

                $.ajax({
                    url: "/Product/IsCodeExist",
                    type: "POST",
                    data: jsonRequesData,
                    success: function (data) {
                        //alert("Ajax Requiest Success");
                        $("#codeError").text("");
                        if (data === true) {
                            $("#codeError").text("Code Already Exists");
                           $("#Code").focus();
                        }

                    },
                    error: function () {
                        alert("Ajax Requiest Error to test unique code");
                    }
                });
        });

        function validate(evt) {
            var theEvent = evt || window.event;

            // Handle paste
            if (theEvent.type === 'paste') {
                key = event.clipboardData.getData('text/plain');
            } else {
                // Handle key press
                var key = theEvent.keyCode || theEvent.which;
                key = String.fromCharCode(key);
            }
            var regex = /[0-9]|\./;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }
    </script>
}